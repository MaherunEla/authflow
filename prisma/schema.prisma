generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String     @id @default(uuid())
  name            String
  email           String     @unique
  password        String
  role            Role       @default(USER)
  twoFaEnabled    Boolean    @default(false)
  twoFaSecret     String?
  createdAt       DateTime   @default(now())
  status          UserStatus @default(ACTIVE)
  statusUpdatedAt DateTime?
  suspendReason   String?
  warningReason   String?
  lastLoginAt     DateTime?
  lastLoginIp     String?
  updatedAt       DateTime   @updatedAt

  sessions      Session[]
  loginAttempts LoginAttempt[]
  devices       Device[]
}

model Session {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  device    Device?  @relation(fields: [deviceId], references: [id])
  deviceId  String?
  ip        String
  userAgent String
  location  String?
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Device {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  fingerprint String
  name        String?
  ip          String
  location    String?
  userAgent   String?
  trusted     Boolean   @default(false)
  lastUsedAt  DateTime  @default(now())
  createdAt   DateTime  @default(now())
  sesssions   Session[]
}

model LoginAttempt {
  id        String      @id @default(cuid())
  user      User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  email     String
  success   LoginStatus
  reason    String?
  ip        String
  location  String?
  userAgent String?
  createdAt DateTime    @default(now())
}

enum LoginStatus {
  SUCCESS
  FAILURE
}

enum Role {
  USER
  ADMIN
  GUEST
}

enum UserStatus {
  ACTIVE
  WARNED
  SUSPENDED
  LOCKED
}
